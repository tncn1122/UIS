{"version":3,"sources":["asset/img/icon/search.svg","view/contest/topFilter/index.js","view/contest/topFilter/style.module.scss","view/contest/contestComponent/style.module.scss","view/contest/contestComponent/ranking/index.js","view/contest/contestComponent/index.js","view/contest/public/style.module.scss","view/contest/public/index.js"],"names":["TopFilter","useState","isPublic","setIsPublic","useEffect","currentPathname","URLUtils","getPathnameInURL","indexOf","FE_ROUTE","CONTEST","PUBLIC","className","styles","btn","active","join","to","TEXT_UI_CONTEST","PRIVATE","size","suffix","alt","src","iconSearch","placeholder","module","exports","Ranking","contestId","rankingTop3","setRankingTop3","username","score","RANKING","ValidationUtils","empty","map","idx","span","MiscUtils","generateId","HOME","MORE","Text","contestStatus","CONTEST_STATUS","PAST","ONGOING","PLANNED","connect","currentUser","authReducer","contest","id","name","is_public","is_open_registration","description","status","location","event_time_begin","event_time_end","isAddedToCalendar","isRegistered","noOfRegister","history","useHistory","isLoading","setIsLoading","eventTimeText1","setEventTimeText1","eventTimeText2","setEventTimeText2","eventTimeValue1","setEventTimeValue1","eventTimeValue2","setEventTimeValue2","isAlreadyAdded","setIsAlreadyAdded","isAlreadyRegistered","setIsAlreadyRegistered","currentNoOfRegister","setCurrentNoOfRegister","beginTxt","DateTimeUtils","formatDate","endTxt","beginArr","split","endArr","BEGIN","END","TIME","DATE","isHidden","content","classnames","targetTime","isDisabled","devider","LOCATION","REGISTERED_USER","disabled","onClick","push","AUTH","LOGIN","ContestService","addToCalendar","then","catch","error","ErrorHandlerUtils","http","ADDED_TO_CALENDAR","ADD_TO_CALENDAR","next","ENTER_ROOM","register","REGISTERED","REGISTER","PublicContest","contests","setContests","isLoadingShown","setIsLoadingShown","getPublic","contestList","pagination","defaultCurrent","total"],"mappings":"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","file":"static/js/17.56dd1ee2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.67c51618.svg\";","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Input } from 'antd'\nimport { FE_ROUTE, TEXT_UI_CONTEST } from 'config'\nimport { URLUtils } from 'utils'\nimport iconSearch from 'asset/img/icon/search.svg'\nimport styles from './style.module.scss'\n\nexport default function TopFilter() {\n  const [isPublic, setIsPublic] = useState(true)\n\n  useEffect(() => {\n    const currentPathname = URLUtils.getPathnameInURL()\n    setIsPublic(currentPathname.indexOf(FE_ROUTE.CONTEST.PUBLIC) === 0)\n  }, [])\n\n  return (\n    <>\n      <div className={styles['switch-buttons']}>\n        <Button className={[styles.btn, isPublic ? styles.active : ''].join(' ')}>\n          <Link to={FE_ROUTE.CONTEST.PUBLIC}>\n            <span className=\"typography-menu transform-uppercase\">{TEXT_UI_CONTEST.PUBLIC}</span>\n          </Link>\n        </Button>\n        <Button className={[styles.btn, !isPublic ? styles.active : ''].join(' ')}>\n          <Link to={FE_ROUTE.CONTEST.PRIVATE}>\n            <span className=\"typography-menu transform-uppercase\">{TEXT_UI_CONTEST.PRIVATE}</span>\n          </Link>\n        </Button>\n      </div>\n\n      <div className={styles['search-challenge']}>\n        <Input\n          size=\"large\"\n          suffix={<img alt=\"search-icon\" src={iconSearch} />}\n          placeholder={isPublic ? 'Tìm tên cuộc thi...' : 'Nhập mã chia sẻ'}\n        />\n      </div>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contest-page-content\":\"style_contest-page-content__2UlCv\",\"switch-buttons\":\"style_switch-buttons__3juiA\",\"btn\":\"style_btn__26eDt\",\"active\":\"style_active__1n1kN\",\"search-challenge\":\"style_search-challenge__3ZJ7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"style_content__1GbzM\",\"row-into\":\"style_row-into__D8ObW\",\"col-title\":\"style_col-title__3hWT2\",\"contest-title\":\"style_contest-title__1M75m\",\"col-countdown\":\"style_col-countdown__3-BPA\",\"devider\":\"style_devider__MI0yQ\",\"row-detail\":\"style_row-detail__2v_9N\",\"contest-button\":\"style_contest-button__28KMI\",\"contest-button-past\":\"style_contest-button-past__2j7h-\",\"contest-button-ongoing\":\"style_contest-button-ongoing__3sHOP\",\"contest-button-planned\":\"style_contest-button-planned__3vbpQ\",\"contest-status\":\"style_contest-status___yrAM\",\"contest-status-past\":\"style_contest-status-past__2DuIm\",\"contest-status-ongoing\":\"style_contest-status-ongoing__2Nc-z\",\"contest-status-planned\":\"style_contest-status-planned__WPkaO\"};","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col } from 'antd'\nimport { MiscUtils, ValidationUtils } from 'utils'\nimport { FE_ROUTE, TEXT_UI_CONTEST } from 'config'\n\nexport default function Ranking({ contestId, isPublic }) {\n  const [rankingTop3, setRankingTop3] = useState(null)\n\n  useEffect(() => {\n    // query top 3 ranking by contestId\n    setRankingTop3([\n      {\n        username: 'Pham Van A',\n        score: 100,\n      },\n      {\n        username: 'Nguyen Van B',\n        score: 95,\n      },\n      {\n        username: 'Tran Van C',\n        score: 90,\n      },\n    ])\n  }, [])\n\n  return (\n    <div className=\"width-100\">\n      <div className=\"typography-h5 ta-center color-primary bold\">{TEXT_UI_CONTEST.RANKING}</div>\n      {!ValidationUtils.empty(rankingTop3) && (\n        <Row className=\"justify-content-center\">\n          {rankingTop3.map(({ username, score }, idx) => (\n            <Col span=\"8\" className=\"ta-center\" key={MiscUtils.generateId()}>\n              <span className=\"typography-small\">\n                {idx + 1}. {username} ({score})\n              </span>\n            </Col>\n          ))}\n        </Row>\n      )}\n      <Row className=\"justify-content-center\">\n        <Link\n          to={`${FE_ROUTE.CONTEST.HOME}/${\n            isPublic ? 'public' : 'private'\n          }/${contestId}?tab=ranking`}\n          className=\"text-underline typography-small\"\n        >\n          {TEXT_UI_CONTEST.MORE}\n        </Link>\n      </Row>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport classnames from 'classnames'\nimport { Typography, Row, Col, Divider, Button } from 'antd'\nimport { BiCalendarPlus } from 'react-icons/bi'\nimport { FiUserPlus, FiUserCheck } from 'react-icons/fi'\nimport { FaRegCalendarCheck } from 'react-icons/fa'\nimport { ImEnter } from 'react-icons/im'\nimport { CountDownNumberic, LoadingIndicator } from 'component'\nimport { CONTEST_STATUS, TEXT_UI_CONTEST, FE_ROUTE } from 'config'\nimport { DateTimeUtils, ErrorHandlerUtils, URLUtils, ValidationUtils } from 'utils'\nimport { ContestService } from 'service'\nimport Ranking from './ranking'\nimport styles from './style.module.scss'\nimport './style.overwrite.scss'\n\nconst { Text } = Typography\nconst contestStatus = {}\ncontestStatus[CONTEST_STATUS.PAST] = TEXT_UI_CONTEST.PAST\ncontestStatus[CONTEST_STATUS.ONGOING] = TEXT_UI_CONTEST.ONGOING\ncontestStatus[CONTEST_STATUS.PLANNED] = TEXT_UI_CONTEST.PLANNED\n\n/* eslint-disable camelcase */\nfunction ContestComponent({\n  currentUser,\n  contest: {\n    id,\n    name,\n    is_public,\n    is_open_registration,\n    description,\n    status,\n    location,\n    event_time_begin,\n    event_time_end,\n    isAddedToCalendar,\n    isRegistered,\n    noOfRegister,\n  },\n}) {\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n  const [eventTimeText1, setEventTimeText1] = useState('')\n  const [eventTimeText2, setEventTimeText2] = useState('')\n  const [eventTimeValue1, setEventTimeValue1] = useState('')\n  const [eventTimeValue2, setEventTimeValue2] = useState('')\n  const [isAlreadyAdded, setIsAlreadyAdded] = useState(isAddedToCalendar === 1)\n  const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(isRegistered === 1)\n  const [currentNoOfRegister, setCurrentNoOfRegister] = useState(noOfRegister)\n\n  useEffect(() => {\n    const beginTxt = DateTimeUtils.formatDate(event_time_begin)\n    const endTxt = DateTimeUtils.formatDate(event_time_end)\n    const beginArr = beginTxt.split(' ')\n    const endArr = endTxt.split(' ')\n    if (beginArr[0] !== endArr[0]) {\n      // different date\n      setEventTimeText1(TEXT_UI_CONTEST.BEGIN)\n      setEventTimeText2(TEXT_UI_CONTEST.END)\n      setEventTimeValue1(beginTxt)\n      setEventTimeValue2(endTxt)\n    } else {\n      setEventTimeText1(TEXT_UI_CONTEST.TIME)\n      setEventTimeText2(TEXT_UI_CONTEST.DATE)\n      setEventTimeValue1(`${beginArr[1]} ~ ${endArr[1]}`)\n      setEventTimeValue2(beginArr[0])\n    }\n  }, [])\n\n  const submitAddToCalendar = () => {\n    if (ValidationUtils.empty(currentUser))\n      history.push(`${FE_ROUTE.AUTH.LOGIN}?next=${URLUtils.getPathnameInURL()}`)\n    else {\n      setIsLoading(true)\n      ContestService.addToCalendar({ contestId: id })\n        .then(() => {\n          setIsLoading(false)\n          setIsAlreadyAdded(!isAlreadyAdded)\n        })\n        .catch((error) => {\n          setIsLoading(false)\n          ErrorHandlerUtils.http(error)\n        })\n    }\n  }\n\n  const submitRegister = () => {\n    if (ValidationUtils.empty(currentUser))\n      history.push(`${FE_ROUTE.AUTH.LOGIN}?next=${URLUtils.getPathnameInURL()}`)\n    else {\n      setIsLoading(true)\n      ContestService.register({ contestId: id })\n        .then(() => {\n          setIsLoading(false)\n          setCurrentNoOfRegister(\n            isAlreadyRegistered ? currentNoOfRegister - 1 : currentNoOfRegister + 1,\n          )\n          setIsAlreadyRegistered(!isAlreadyRegistered)\n        })\n        .catch((error) => {\n          setIsLoading(false)\n          ErrorHandlerUtils.http(error)\n        })\n    }\n  }\n\n  const submitGoToRoom = () => {\n    const next = `${FE_ROUTE.CONTEST.HOME}/${\n      is_public ? 'public' : 'private'\n    }/${id}?tab=waitingRoom`\n    if (ValidationUtils.empty(currentUser)) history.push(`${FE_ROUTE.AUTH.LOGIN}?next=${next}`)\n    else {\n      history.push(next)\n    }\n  }\n\n  return (\n    <LoadingIndicator isHidden={!isLoading}>\n      <div className={styles.content}>\n        <Row className={styles['row-into']}>\n          <Col span=\"12\" className={styles['col-title']}>\n            <Link to={`${FE_ROUTE.CONTEST.HOME}/${is_public ? 'public' : 'private'}/${id}`}>\n              <h2 className={classnames('typography-h3 bold', styles['contest-title'])}>{name}</h2>\n            </Link>\n            <div className=\"typography-small\">{description}</div>\n          </Col>\n          <Col span=\"9\" className={classnames(styles['col-countdown'], 'align-content-center')}>\n            {status !== CONTEST_STATUS.PLANNED && (\n              <CountDownNumberic\n                targetTime={event_time_end}\n                isDisabled={status === CONTEST_STATUS.PAST}\n              />\n            )}\n            {status === CONTEST_STATUS.PLANNED && (\n              <CountDownNumberic targetTime={event_time_begin} />\n            )}\n          </Col>\n          <Col span=\"3\">\n            <div\n              className={classnames(\n                'typography-menu-subtext align-content-center',\n                styles['contest-status'],\n                styles[`contest-status-${status}`],\n              )}\n            >\n              {contestStatus[status]}\n            </div>\n          </Col>\n        </Row>\n\n        <Divider className={styles.devider} />\n\n        <Row className={styles['row-detail']}>\n          {/* Time and location */}\n          <Col span=\"7\">\n            <Row>\n              <Col span=\"8\">\n                <Text className=\"bold\">{eventTimeText1}:</Text>\n              </Col>\n              <Col span=\"16\">\n                <Text>{eventTimeValue1}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span=\"8\">\n                <Text className=\"bold\">{eventTimeText2}:</Text>\n              </Col>\n              <Col span=\"16\">\n                <Text>{eventTimeValue2}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span=\"8\">\n                <Text className=\"bold\">{TEXT_UI_CONTEST.LOCATION}:</Text>\n              </Col>\n              <Col span=\"16\">\n                <Text>{location}</Text>\n              </Col>\n            </Row>\n          </Col>\n\n          {/* No of register */}\n          <Col span=\"4\" className=\"ta-center\">\n            <div className=\"typography-subtitle-regular color-primary\">{currentNoOfRegister}</div>\n            <div>\n              <Text>{TEXT_UI_CONTEST.REGISTERED_USER}</Text>\n            </div>\n          </Col>\n\n          {/* Action */}\n          <Col span=\"13\" className=\"align-content-center\">\n            {status === CONTEST_STATUS.PAST && <Ranking contestId={id} isPublic={is_public} />}\n            {status !== CONTEST_STATUS.PAST && (\n              <>\n                <Button\n                  className={classnames(\n                    'typography-menu-subtext m-r-15',\n                    styles['contest-button'],\n                    styles[`contest-button-${status}`],\n                    { 'contest-button-planned-added-to-calendar': isAlreadyAdded },\n                  )}\n                  disabled={status === CONTEST_STATUS.ONGOING}\n                  onClick={submitAddToCalendar}\n                >\n                  {isAlreadyAdded ? (\n                    <div className=\"align-content-center\">\n                      <FaRegCalendarCheck className=\"typography-menu\" />\n                      &nbsp;{TEXT_UI_CONTEST.ADDED_TO_CALENDAR}\n                    </div>\n                  ) : (\n                    <div className=\"align-content-center\">\n                      <BiCalendarPlus className=\"typography-menu\" />\n                      &nbsp;{TEXT_UI_CONTEST.ADD_TO_CALENDAR}\n                    </div>\n                  )}\n                </Button>\n\n                {status === CONTEST_STATUS.ONGOING && (\n                  <Button\n                    className={classnames(\n                      'typography-menu-subtext',\n                      styles['contest-button'],\n                      styles[`contest-button-${status}`],\n                    )}\n                    onClick={submitGoToRoom}\n                  >\n                    <ImEnter className=\"typography-menu\" />\n                    &nbsp;{TEXT_UI_CONTEST.ENTER_ROOM}\n                  </Button>\n                )}\n\n                {status === CONTEST_STATUS.PLANNED && (\n                  <Button\n                    className={classnames(\n                      'typography-menu-subtext',\n                      styles['contest-button'],\n                      styles[`contest-button-${status}`],\n                      { 'contest-button-planned-added-to-calendar': isAlreadyRegistered },\n                    )}\n                    disabled={!is_open_registration}\n                    onClick={submitRegister}\n                  >\n                    {isAlreadyRegistered ? (\n                      <div className=\"align-content-center\">\n                        <FiUserCheck className=\"typography-menu\" />\n                        &nbsp;{TEXT_UI_CONTEST.REGISTERED}\n                      </div>\n                    ) : (\n                      <div className=\"align-content-center\">\n                        <FiUserPlus className=\"typography-menu\" />\n                        &nbsp;{TEXT_UI_CONTEST.REGISTER}\n                      </div>\n                    )}\n                  </Button>\n                )}\n              </>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </LoadingIndicator>\n  )\n}\n/* eslint-enable camelcase */\n\nconst mapStateToProps = ({ authReducer: { currentUser } }) => ({\n  currentUser,\n})\n\nexport default connect(mapStateToProps)(ContestComponent)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contest-page-content\":\"style_contest-page-content__3n8PH\",\"content\":\"style_content__1qny3\",\"pagination\":\"style_pagination__1xAIt\"};","import React, { useState, useEffect } from 'react'\nimport { Pagination } from 'antd'\nimport { ErrorHandlerUtils, ValidationUtils } from 'utils'\nimport { ContestService } from 'service'\nimport { LoadingIndicator } from 'component'\nimport ContestComponent from '../contestComponent'\nimport TopFilter from '../topFilter'\nimport styles from './style.module.scss'\n\nexport default function PublicContest() {\n  const [contests, setContests] = useState(null)\n  const [isLoadingShown, setIsLoadingShown] = useState(false)\n\n  useEffect(() => {\n    setIsLoadingShown(true)\n    ContestService.getPublic()\n      .then((contestList) => {\n        setIsLoadingShown(false)\n        setContests(contestList)\n      })\n      .catch((error) => {\n        setIsLoadingShown(false)\n        ErrorHandlerUtils.http(error)\n      })\n  }, [])\n\n  return (\n    <LoadingIndicator isHidden={!isLoadingShown}>\n      <div className={styles.content}>\n        <TopFilter />\n        {!ValidationUtils.empty(contests) && (\n          <>\n            <div className={styles['challenge-list']}>\n              {contests.map((contest) => (\n                <ContestComponent contest={contest} />\n              ))}\n            </div>\n            <div className={styles.pagination}>\n              <Pagination defaultCurrent={1} total={1} />\n            </div>\n          </>\n        )}\n      </div>\n    </LoadingIndicator>\n  )\n}\n"],"sourceRoot":""}