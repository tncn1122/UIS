{"version":3,"sources":["view/activate/style.module.scss","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleTwoTone.js","../node_modules/@ant-design/icons/es/icons/CheckCircleTwoTone.js","view/activate/ActivateForgotPasswordView.js"],"names":["module","exports","CheckCircleTwoTone","primaryColor","secondaryColor","props","ref","React","AntdIcon","_objectSpread","icon","CheckCircleTwoToneSvg","displayName","Title","Text","layout","labelCol","span","wrapperCol","tailLayout","ActivateForgotPasswordView","useState","token","setToken","isLoadingShown","setIsLoadingShown","errorMessage","setErrorMessage","changeSuccess","setChangeSuccess","useEffect","tokenVal","URLUtils","getParamsInURL","ActivateService","forgotPassword","then","catch","error","ErrorHandlerUtils","extractErrorMessage","isHidden","className","styles","level","twoToneColor","to","FE_ROUTE","DEFAULT_ROUTE","TEXT_UI_ERROR_PAGE","GO_BACK","AUTH","LOGIN","TEXT_UI_AUTH","TEXT_UI_USER_PROFILE","CHANGE_PASSWORD","TITLE","name","initialValues","password","onFinish","data","Item","label","NEW_PASSWORD","hasFeedback","rules","validator","_","value","ValidationUtils","Password","NEW_PASSWORD_CONFIRM","dependencies","getFieldValue","textUserInfo","passwordConfirm","type","htmlType","TEXT_BUTTON","SAVE"],"mappings":"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","file":"static/js/29.256adcf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activate-registration-view\":\"style_activate-registration-view__UeiBN\",\"activate-forgot-password-view\":\"style_activate-forgot-password-view__3yVDK\"};","// This icon file is generated automatically.\nvar CheckCircleTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\", \"fill\": primaryColor } }] }; }, \"name\": \"check-circle\", \"theme\": \"twotone\" };\nexport default CheckCircleTwoTone;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleTwoToneSvg from \"@ant-design/icons-svg/es/asn/CheckCircleTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleTwoTone = function CheckCircleTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleTwoToneSvg\n  }));\n};\n\nCheckCircleTwoTone.displayName = 'CheckCircleTwoTone';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleTwoTone);","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Input, Button, Typography } from 'antd'\nimport { CloseCircleTwoTone, CheckCircleTwoTone } from '@ant-design/icons'\nimport { AlignCenterContent, LoadingIndicator } from 'component'\nimport { ErrorHandlerUtils, URLUtils, ValidationUtils } from 'utils'\nimport { ActivateService } from 'service'\nimport {\n  FE_ROUTE,\n  TEXT_BUTTON,\n  TEXT_UI_ERROR_PAGE,\n  TEXT_UI_USER_PROFILE,\n  TEXT_UI_AUTH,\n} from 'config'\nimport styles from './style.module.scss'\n\nconst { Title, Text } = Typography\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n  wrapperCol: { span: 24 },\n}\n\nexport default function ActivateForgotPasswordView() {\n  const [token, setToken] = useState(true)\n  const [isLoadingShown, setIsLoadingShown] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [changeSuccess, setChangeSuccess] = useState(false)\n\n  useEffect(() => {\n    const queryParams = URLUtils.getParamsInURL()\n    const tokenVal = queryParams.token\n    ActivateService.forgotPassword({ token: tokenVal })\n      .then(() => {\n        setIsLoadingShown(false)\n        setToken(tokenVal)\n      })\n      .catch((error) => {\n        setIsLoadingShown(false)\n        setErrorMessage(ErrorHandlerUtils.extractErrorMessage(error))\n      })\n  }, []) // run once in page loaded\n\n  const submitForgotPassword = (data) => {\n    ActivateService.forgotPassword({ ...data, token })\n      .then(() => {\n        setIsLoadingShown(false)\n        setChangeSuccess(true)\n      })\n      .catch((error) => {\n        setIsLoadingShown(false)\n        setErrorMessage(ErrorHandlerUtils.extractErrorMessage(error))\n      })\n  }\n\n  return (\n    <AlignCenterContent>\n      <LoadingIndicator isHidden={!isLoadingShown}>\n        <div className={styles['activate-forgot-password-view']}>\n          {!isLoadingShown && (\n            <>\n              {errorMessage && (\n                <div>\n                  <Title level={3}>\n                    {errorMessage} <CloseCircleTwoTone twoToneColor=\"red\" />\n                  </Title>\n                  <Text>\n                    <Link to={FE_ROUTE.DEFAULT_ROUTE} className=\"btn\">\n                      &larr; {TEXT_UI_ERROR_PAGE.GO_BACK}\n                    </Link>\n                  </Text>\n                </div>\n              )}\n\n              {!errorMessage && (\n                <>\n                  {changeSuccess && (\n                    <div>\n                      <Title level={3}>\n                        Đổi mật khẩu thành công <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      </Title>\n                      <Text>\n                        <Link to={FE_ROUTE.AUTH.LOGIN} className=\"btn\">\n                          {TEXT_UI_AUTH.LOGIN.LOGIN}\n                        </Link>\n                        &nbsp;để tiếp tục\n                      </Text>\n                    </div>\n                  )}\n                  {!changeSuccess && (\n                    <>\n                      <div className=\"mb-30 label-3 ta-center\">\n                        {TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.TITLE}\n                      </div>\n                      <div>\n                        <Form\n                          {...layout}\n                          name=\"basic\"\n                          initialValues={{\n                            password: '',\n                            'password-confirm': '',\n                          }}\n                          onFinish={submitForgotPassword}\n                        >\n                          <Form.Item\n                            name=\"password\"\n                            label={TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.NEW_PASSWORD}\n                            className=\"custom-form-item-label-required\"\n                            hasFeedback\n                            rules={[\n                              () => ({\n                                validator(_, value) {\n                                  return ValidationUtils.password(value)\n                                },\n                              }),\n                            ]}\n                          >\n                            <Input.Password />\n                          </Form.Item>\n\n                          <Form.Item\n                            name=\"passwordConfirm\"\n                            label={TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.NEW_PASSWORD_CONFIRM}\n                            className=\"custom-form-item-label-required\"\n                            hasFeedback\n                            dependencies={['password']}\n                            rules={[\n                              ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                  return ValidationUtils.textUserInfo(value).then(() =>\n                                    ValidationUtils.passwordConfirm(\n                                      getFieldValue('password'),\n                                      value,\n                                    ),\n                                  )\n                                },\n                              }),\n                            ]}\n                          >\n                            <Input.Password />\n                          </Form.Item>\n\n                          <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                              {TEXT_BUTTON.SAVE}\n                            </Button>\n                          </Form.Item>\n                        </Form>\n                      </div>\n                    </>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </LoadingIndicator>\n    </AlignCenterContent>\n  )\n}\n"],"sourceRoot":""}