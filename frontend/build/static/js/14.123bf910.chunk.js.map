{"version":3,"sources":["component/HtmlRender/index.js","view/News/Comments/CommentItem/style.module.scss","view/News/Comments/style.module.scss","view/News/NewsDetail/style.module.scss","asset/img/icon/comment-outline.svg","asset/img/icon/eye.svg","component/RichTextEditor/index.js","asset/img/icon/comment-reply.svg","view/News/Comments/CommentItem/index.js","view/News/Comments/index.js","view/News/NewsDetail/index.js"],"names":["window","katex","modules","syntax","highlight","text","hljs","highlightAuto","value","clipboard","matchVisual","formats","HtmlRender","props","htmlData","readOnly","theme","module","exports","Quill","register","ImageResize","ImageDrop","htmlEditButton","VideoResize","toolbar","script","buttonHTML","okText","cancelText","tagName","imageDrop","RichTextEditor","onChange","defaultProps","CommentItem","commentData","newsId","replies","handleReplySuccess","useForm","form","useState","comment","countLikes","setCountLikes","isLiked","isLikedByUser","setIsLikedByUser","showReplyTextbox","setShowReplyTextbox","actions","title","onClick","NewsService","deleteCommentLike","id","then","resp","prevCountLikes","catch","error","ErrorHandlerUtils","http","postCommentLike","createElement","LikeFilled","LikeOutlined","className","alt","src","iconCommentReply","styles","author","user","username","avatar","userProfile","URLUtils","buildAvatarURL","content","dangerouslySetInnerHTML","__html","datetime","moment","createdAt","fromNow","onFinish","data","toReplyCommentId","newsCommentParentId","postCommentReply","replyData","reply","resetFields","Item","name","placeholder","type","size","htmlType","connect","TextArea","currentUser","authReducer","comments","setComments","page","setTotal","useEffect","search","getComments","results","total","fetchData","repliedComment","_","find","newReplies","push","index","findIndex","newComments","splice","postComment","newComment","TEXT_BUTTON","CANCEL","SAVE","itemLayout","dataSource","renderItem","length","newsData","setNewsData","countViews","setCountViews","useParams","updateNewsView","postCommentView","getNewsDetails","news","separator","href","updatedAt","htmlContent","span","iconCommentOutline","countComments","iconEye","style","paddingRight","iconFacebook","iconInstagram","linkedinIcon","to","FE_ROUTE","AUTH","LOGIN"],"mappings":"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","file":"static/js/14.123bf910.chunk.js","sourcesContent":["import React from 'react'\nimport hljs from 'highlight.js'\nimport ReactQuill from 'react-quill'\nimport katex from 'katex'\nimport 'highlight.js/styles/vs2015.css'\nimport 'react-quill/dist/quill.bubble.css'\nimport './style.overwrite.scss'\nimport 'katex/dist/katex.min.css'\n\nwindow.katex = katex\n\nconst modules = {\n  syntax: {\n    highlight: (text) => hljs.highlightAuto(text).value,\n  },\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n}\n\nconst formats = [\n  'header',\n  'font',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'script',\n  'formula',\n  'code-block',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'video',\n  'align',\n  'height',\n  'width',\n  'class',\n  'style',\n  'color', 'background'\n]\n\nconst HtmlRender = (props) => {\n  const { htmlData } = props\n  const readOnly = true\n  return (\n    // <div dangerouslySetInnerHTML={{ __html: htmlData }} />\n    <ReactQuill\n      value={htmlData}\n      readOnly={readOnly}\n      theme=\"bubble\"\n      modules={modules}\n      formats={formats}\n    />\n  )\n}\n\nexport default HtmlRender\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"style_comment__1euBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"style_comments__2RBEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"style_news__2RLET\"};","export default __webpack_public_path__ + \"static/media/comment-outline.5a66b682.svg\";","export default __webpack_public_path__ + \"static/media/eye.52b08830.svg\";","import React, { useState } from \"react\";\nimport hljs from 'highlight.js'\nimport ReactQuill, { Quill } from 'react-quill';\nimport { ImageDrop } from 'quill-image-drop-module'\nimport katex from \"katex\";\nimport ImageResize from 'quill-image-resize-module-react'\nimport VideoResize from 'quill-video-resize-module2'\nimport htmlEditButton from 'quill-html-edit-button';\nimport 'highlight.js/styles/vs2015.css'\nimport 'react-quill/dist/quill.snow.css';\nimport './style.overwrite.scss'\nimport \"katex/dist/katex.min.css\";\n\nwindow.katex = katex;\n\n// TODO resize image\nQuill.register({\n  'modules/ImageResize': ImageResize,\n  'modules/imageDrop': ImageDrop,\n  'modules/htmlEditButton': htmlEditButton,\n  'modules/VideoResize': VideoResize,\n});\n\n/* \n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nconst modules = {\n  syntax: {\n    highlight: text => hljs.highlightAuto(text).value,\n  },\n  toolbar: [\n    [{ 'font': [] }, { 'size': [] }],\n    [{ 'color': [] }, { 'background': [] }, 'bold', 'italic', 'underline', 'strike'],\n    ['blockquote', 'code-block', { script: 'sub' }, { script: 'super' }, 'formula'],\n    [{ 'align': [] }, { 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n    ['link', 'image', 'video'],\n  ],\n  htmlEditButton: {\n    buttonHTML: \"HTML\",\n    okText: \"Ok\",\n    cancelText: \"Cancel\",\n  },\n  ImageResize: {\n    // parchment: Quill.import('parchment'),\n    modules: ['Resize', 'DisplaySize', 'Toolbar']\n  },\n  VideoResize: {\n    modules: ['Resize', 'DisplaySize', 'Toolbar'],\n    tagName: 'iframe', // iframe | video\n  },\n  imageDrop: true,\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  }\n}\n\n/* \n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote', 'script', 'formula', 'color', 'background',\n  'code-block',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video',\n  'align', 'height', 'width', 'class', 'style'\n]\n\nconst RichTextEditor = (props) => {\n  const { onChange, value, readOnly } = props\n\n  return (\n    <ReactQuill\n      theme=\"snow\"\n      value={value || ''}\n      formats={formats}\n      modules={readOnly ? { toolbar: false } : modules}\n      onChange={onChange}\n      readOnly={readOnly}\n    />\n  );\n}\nRichTextEditor.defaultProps = {\n  readOnly: false,\n}\n\nexport default RichTextEditor","export default __webpack_public_path__ + \"static/media/comment-reply.3dfa4dd2.svg\";","import React, { createElement, useState } from 'react'\nimport moment from 'moment'\n\nimport HtmlRender from 'component/HtmlRender'\nimport RichTextEditor from 'component/RichTextEditor'\nimport iconCommentReply from 'asset/img/icon/comment-reply.svg'\nimport { Comment, Tooltip, Input, Button, Form } from 'antd'\n\nimport { LikeOutlined, LikeFilled } from '@ant-design/icons'\n\nimport NewsService from 'service/NewsService'\nimport { ErrorHandlerUtils, URLUtils } from 'utils'\n\nimport styles from './style.module.scss'\n\nconst CommentItem = ({ commentData, newsId, replies, handleReplySuccess }) => {\n  const [form] = Form.useForm()\n\n  const [comment, setComment] = useState(commentData)\n  const [countLikes, setCountLikes] = useState(comment.countLikes ? comment.countLikes : 0)\n  const [isLikedByUser, setIsLikedByUser] = useState(comment.isLiked ? comment.isLiked : false)\n  const [showReplyTextbox, setShowReplyTextbox] = useState(false)\n\n  const handleLike = () => {\n    if (isLikedByUser) {\n      NewsService.deleteCommentLike(newsId, comment.id)\n        .then((resp) => {\n          setCountLikes((prevCountLikes) => prevCountLikes - 1)\n          setIsLikedByUser(false)\n        })\n        .catch((error) => {\n          ErrorHandlerUtils.http(error)\n        })\n    } else {\n      NewsService.postCommentLike(newsId, comment.id)\n        .then((resp) => {\n          setCountLikes((prevCountLikes) => prevCountLikes + 1)\n          setIsLikedByUser(true)\n        })\n        .catch((error) => {\n          ErrorHandlerUtils.http(error)\n        })\n    }\n  }\n\n  const handleReplyClick = () => {\n    setShowReplyTextbox(!showReplyTextbox)\n  }\n\n  const handleSubmitReply = (data) => {\n    // toReplyCommentId: Reply only to root parent, not child.\n    const toReplyCommentId = comment.newsCommentParentId ? comment.newsCommentParentId : comment.id\n    NewsService.postCommentReply(newsId, toReplyCommentId, { text: data.replyData })\n      .then((reply) => {\n        form.resetFields()\n        setShowReplyTextbox(false)\n        handleReplySuccess(reply)\n      })\n      .catch((error) => {\n        ErrorHandlerUtils.http(error)\n      })\n  }\n\n  const actions = [\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={handleLike}>\n        {createElement(isLikedByUser ? LikeFilled : LikeOutlined)}\n        <span className=\"comment-action\">&nbsp;{countLikes}</span>\n      </span>\n    </Tooltip>,\n    <span key=\"comment-basic-reply-to\" onClick={handleReplyClick}>\n      <img alt=\"commentReply\" src={iconCommentReply} />\n      &nbsp;&nbsp;Trả lời\n    </span>,\n  ]\n\n  return (\n    <Comment\n      className={styles.comment}\n      actions={actions}\n      author={comment.user.username}\n      avatar={\n        comment.user.userProfile\n          ? URLUtils.buildAvatarURL(comment.user.userProfile.avatar)\n          : URLUtils.buildAvatarURL()\n      }\n      content={<div dangerouslySetInnerHTML={{ __html: comment.text }} />}\n      datetime={moment(comment.createdAt).fromNow()}\n    >\n      {replies}\n\n      {showReplyTextbox ? (\n        <div>\n          <Form onFinish={handleSubmitReply} form={form}>\n            <Form.Item name=\"replyData\">\n              <RichTextEditor placeholder=\"Trả lời bình luận\" />\n            </Form.Item>\n            <Form.Item className=\"reply-action\">\n              <Button type=\"primary\" size=\"small\" htmlType=\"submit\">\n                Trả lời\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      ) : (\n        ''\n      )}\n    </Comment>\n  )\n}\nexport default CommentItem\n","import React, { useEffect, useState } from 'react'\nimport _ from 'lodash'\nimport { connect } from 'react-redux'\nimport { Input, Form, Space, Button, Divider, List } from 'antd'\n\nimport NewsService from 'service/NewsService'\nimport { ErrorHandlerUtils, DisplayUtils } from 'utils'\nimport { TEXT_NOTIFICATION_SUCCESS, TEXT_BUTTON } from 'config'\nimport RichTextEditor from 'component/RichTextEditor'\nimport CommentItem from './CommentItem'\nimport styles from './style.module.scss'\n\nconst { TextArea } = Input\n\nconst mapStateToProps = ({ authReducer: { currentUser } }) => ({\n  currentUser,\n})\n\nconst Comments = (props) => {\n  const [form] = Form.useForm()\n  const { newsId, currentUser } = props\n\n  const [comments, setComments] = useState([])\n  const [page, setPage] = useState(1)\n  const [total, setTotal] = useState(0)\n\n  const handleSubmitComment = (data) => {\n    NewsService.postComment(newsId, { text: data.commentData })\n      .then((newComment) => {\n        form.resetFields()\n        newComment.replies = []\n        setComments([\n          {\n            ...newComment,\n            user: currentUser,\n          },\n          ...comments,\n        ])\n      })\n      .catch((error) => {\n        ErrorHandlerUtils.http(error)\n      })\n  }\n\n  useEffect(() => {\n    const fetchData = () => {\n      const search = { page }\n      NewsService.getComments(newsId, search).then((resp) => {\n        setComments(resp.results)\n        setTotal(resp.total)\n      })\n    }\n    fetchData()\n  }, [])\n\n  const handleReplySuccess = (reply) => {\n    reply.user = currentUser\n    // append reply to repliedComment\n    const repliedComment = _.find(comments, (comment) => comment.id === reply.newsCommentParentId)\n    const newReplies = [...repliedComment.replies]\n    newReplies.push(reply)\n    repliedComment.replies = newReplies\n    // replace repliedComment in comments\n    const index = _.findIndex(comments, { id: repliedComment.id })\n    const newComments = [...comments]\n    newComments.splice(index, 1, repliedComment)\n    setComments(newComments)\n  }\n\n  return (\n    <div className={styles.comments}>\n      <Form className=\"input-comment\" onFinish={handleSubmitComment} form={form}>\n        <Form.Item name=\"commentData\">\n          <RichTextEditor placeholder=\"Viết bình luận\" />\n          {/* <TextArea rows={4} type=\"text\" placeholder=\"Viết bình luận\" /> */}\n        </Form.Item>\n        <div className=\"ta-right\">\n          <Space>\n            <Button type=\"cancel\">{TEXT_BUTTON.CANCEL}</Button>\n            <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n              {TEXT_BUTTON.SAVE}\n            </Button>\n          </Space>\n        </div>\n      </Form>\n      <Divider />\n      <h3>COMMENTS</h3>\n      <Divider />\n      <List\n        className=\"comment-list\"\n        itemLayout=\"horizontal\"\n        dataSource={comments}\n        renderItem={(comment) => (\n          <CommentItem\n            key={comment.id}\n            newsId={newsId}\n            commentData={comment}\n            handleReplySuccess={handleReplySuccess}\n            replies={\n              comment.replies && comment.replies != null && comment.replies.length > 0 ? (\n                <List\n                  className=\"comment-list\"\n                  itemLayout=\"horizontal\"\n                  dataSource={comment.replies}\n                  renderItem={(reply) => (\n                    <CommentItem\n                      key={reply.id}\n                      commentData={reply}\n                      newsId={newsId}\n                      handleReplySuccess={handleReplySuccess}\n                    />\n                  )}\n                />\n              ) : (\n                ''\n              )\n            }\n          />\n        )}\n      />\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps)(Comments)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Row, Col, Button, Breadcrumb } from 'antd'\n\nimport { FE_ROUTE } from 'config'\nimport NewsService from 'service/NewsService'\nimport { ErrorHandlerUtils } from 'utils'\n\nimport iconCommentOutline from 'asset/img/icon/comment-outline.svg'\nimport iconFacebook from 'asset/img/logo-brand/logo-facebook.svg'\nimport iconInstagram from 'asset/img/logo-brand/logo-instagram.svg'\nimport linkedinIcon from 'asset/img/logo-brand/logo-linkedin.svg'\nimport iconEye from 'asset/img/icon/eye.svg'\nimport Comments from '../Comments'\n\nimport styles from './style.module.scss'\n\nconst mapStateToProps = ({ authReducer: { currentUser } }) => ({\n  currentUser,\n})\n\nconst NewsDetail = (props) => {\n  const [newsData, setNewsData] = useState([])\n  const [countViews, setCountViews] = useState(0)\n  const { newsId } = useParams()\n  const { currentUser } = props\n\n  useEffect(() => {\n    fetchData(newsId)\n    updateNewsView()\n    return () => {\n      ;[]\n    }\n  }, [])\n  const updateNewsView = () => {\n    NewsService.postCommentView(newsId)\n  }\n\n  const fetchData = (id) => {\n    NewsService.getNewsDetails(id)\n      .then((resp) => {\n        setNewsData(resp)\n        setCountViews(resp.countViews)\n      })\n      .catch((error) => {\n        ErrorHandlerUtils.http(error)\n      })\n  }\n\n  return (\n    <div className={styles.news}>\n      <Breadcrumb className=\"breadcrumb\" separator=\">\">\n        <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n        <Breadcrumb.Item href=\"/news\">Tin tức</Breadcrumb.Item>\n        <Breadcrumb.Item>{newsData.title}</Breadcrumb.Item>\n      </Breadcrumb>\n      <div className=\"post\">\n        <h2 className=\"title\">{newsData.title}</h2>\n        <h5 className=\"time\">{newsData.updatedAt}</h5>\n        <div\n          className=\"post__main mb-50\"\n          dangerouslySetInnerHTML={{ __html: newsData.htmlContent }}\n        />\n      </div>\n      <Row className=\"footer\">\n        <Col span={20}>\n          <img alt=\"comment\" src={iconCommentOutline} />\n          {newsData.countComments}\n          <img alt=\"view\" src={iconEye} />\n          {countViews}\n        </Col>\n        <Col span={4} style={{ paddingRight: 5 }}>\n          <img alt=\"facebook\" src={iconFacebook} />\n          <img alt=\"instagram\" src={iconInstagram} />\n          <img alt=\"linkedin\" src={linkedinIcon} />\n        </Col>\n      </Row>\n      {currentUser ? (\n        <Comments newsId={newsId} />\n      ) : (\n        <div className=\"require-login\">\n          <Link to={FE_ROUTE.AUTH.LOGIN}>\n            <Button type=\"primary\">Vui lòng đăng nhập để bình luận</Button>\n          </Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps)(NewsDetail)\n"],"sourceRoot":""}