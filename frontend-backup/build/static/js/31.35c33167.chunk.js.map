{"version":3,"sources":["view/changePassword/style.module.scss","view/changePassword/index.js"],"names":["module","exports","layout","labelCol","span","wrapperCol","tailLayout","offset","connect","currentUser","authReducer","useForm","form","useState","isLoadingShown","setIsLoadingShown","isForgotPasswordShown","setIsForgotPasswordShown","className","styles","TEXT_UI_USER_PROFILE","GENERAL_INFORMATION","isHidden","isShown","onClose","currentUserEmail","email","ModelService","UserService","title","CHANGE_PASSWORD","TITLE","name","initialValues","oldPassword","newPassword","newPasswordConfirm","onFinish","data","changePassword","then","resetFields","DisplayUtils","showNotification","TEXT_NOTIFICATION_SUCCESS","UPDATE_INFO_SUCCESS","catch","error","ErrorHandlerUtils","http","Item","label","OLD_PASSWORD","hasFeedback","rules","validator","_","value","ValidationUtils","password","Password","NEW_PASSWORD","NEW_PASSWORD_CONFIRM","dependencies","getFieldValue","textUserInfo","passwordConfirm","type","TEXT_BUTTON","CANCEL","htmlType","SAVE","onClick","TEXT_UI_AUTH","LOGIN","FORGOT_PASSWORD"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,oBAAoB,iCAAiC,kBAAkB,+BAA+B,gBAAgB,6BAA6B,iBAAiB,8BAA8B,aAAa,0BAA0B,YAAY,yBAAyB,YAAY,yBAAyB,cAAc,2BAA2B,kBAAkB,iC,kOCS1XC,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAiIlBI,uBA9HS,SAAC,GAAD,MAAuC,CAC7DC,YADsB,EAAGC,YAAeD,eA8H3BD,EA1HQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACxB,EAAe,IAAKE,UAAbC,EAAP,oBACA,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0DF,oBAAS,GAAnE,mBAAOG,EAAP,KAA8BC,EAA9B,KAgBA,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,oBAAID,UAAWC,IAAO,mBAAtB,SAA2CC,IAAqBC,sBAChE,cAAC,IAAD,CAAkBC,UAAWR,EAA7B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACES,QAASP,EACTQ,QAAS,kBAAMP,GAAyB,IACxCQ,iBAAkBhB,EAAYiB,MAC9BC,aAAcC,MAEhB,mBAAMC,MAAOT,IAAqBU,gBAAgBC,MAAlD,SACE,8CACM7B,GADN,IAEE8B,KAAK,QACLpB,KAAMA,EACNqB,cAAe,CACbC,YAAa,GACbC,YAAa,GACbC,mBAAoB,IAEtBC,SAnCiB,SAACC,GAC5BvB,GAAkB,GAClBa,IAAYW,eAAeD,GACxBE,MAAK,WACJ5B,EAAK6B,cACL1B,GAAkB,GAClB2B,IAAaC,iBAAiBC,IAA0BC,wBAEzDC,OAAM,SAACC,GACNhC,GAAkB,GAClBiC,IAAkBC,KAAKF,OAgBnB,UAWE,kBAAMG,KAAN,CACE/C,SAAU,CAAEC,KAAM,GAClB4B,KAAK,cACLmB,MAAO/B,IAAqBU,gBAAgBsB,aAC5ClC,UAAU,kCACVmC,aAAW,EACXC,MAAO,CACL,iBAAO,CACLC,UADK,SACKC,EAAGC,GACX,OAAOC,IAAgBC,SAASF,OATxC,SAcE,kBAAOG,SAAP,MAGF,kBAAMV,KAAN,CACE/C,SAAU,CAAEC,KAAM,GAClB4B,KAAK,cACLmB,MAAO/B,IAAqBU,gBAAgB+B,aAC5C3C,UAAU,kCACVmC,aAAW,EACXC,MAAO,CACL,iBAAO,CACLC,UADK,SACKC,EAAGC,GACX,OAAOC,IAAgBC,SAASF,OATxC,SAcE,kBAAOG,SAAP,MAGF,kBAAMV,KAAN,CACE/C,SAAU,CAAEC,KAAM,GAClB4B,KAAK,qBACLmB,MAAO/B,IAAqBU,gBAAgBgC,qBAC5C5C,UAAU,kCACVmC,aAAW,EACXU,aAAc,CAAC,eACfT,MAAO,CACL,gBAAGU,EAAH,EAAGA,cAAH,MAAwB,CACtBT,UADsB,SACZC,EAAGC,GACX,OAAOC,IAAgBO,aAAaR,GAAOjB,MAAK,kBAC9CkB,IAAgBQ,gBAAgBF,EAAc,eAAgBP,UAXxE,SAiBE,kBAAOG,SAAP,MAGF,kBAAMV,KAAN,2BAAe5C,GAAf,aACE,sBAAKY,UAAWC,IAAO,eAAvB,UACE,8BACE,mBAAQgD,KAAK,SAAb,SAAuBC,IAAYC,SACnC,mBAAQF,KAAK,UAAUG,SAAS,SAAhC,SACGF,IAAYG,UAGjB,qBAAKrD,UAAWC,IAAO,mBAAvB,SACE,mBACED,UAAU,8CACVsD,QAAS,kBAAMvD,GAAyB,IAF1C,SAIGwD,IAAaC,MAAMC","file":"static/js/31.35c33167.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-avatar-block\":\"style_user-avatar-block__3GhrH\",\"user-info-title\":\"style_user-info-title__2L1uG\",\"user-info-row\":\"style_user-info-row__B8i4d\",\"user-info-body\":\"style_user-info-body__2Y0JG\",\"card-block\":\"style_card-block__3Grmw\",\"edit-icon\":\"style_edit-icon__2smg7\",\"user-menu\":\"style_user-menu__13dOR\",\"form-footer\":\"style_form-footer__1T2X7\",\"link-forgot-pwd\":\"style_link-forgot-pwd__2slE-\"};","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, Space, Card } from 'antd'\nimport { TEXT_UI_USER_PROFILE, TEXT_BUTTON, TEXT_NOTIFICATION_SUCCESS, TEXT_UI_AUTH } from 'config'\nimport UserProfileComponent from 'component/UserProfileComponent'\nimport { LoadingIndicator, ForgotPasswordModal } from 'component'\nimport { ErrorHandlerUtils, ValidationUtils, DisplayUtils } from 'utils'\nimport { UserService } from 'service'\nimport styles from './style.module.scss'\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 19 },\n}\nconst tailLayout = {\n  wrapperCol: { offset: 4, span: 19 },\n}\n\nconst mapStateToProps = ({ authReducer: { currentUser } }) => ({\n  currentUser,\n})\n\nconst ChangePassword = ({ currentUser }) => {\n  const [form] = Form.useForm()\n  const [isLoadingShown, setIsLoadingShown] = useState(false)\n  const [isForgotPasswordShown, setIsForgotPasswordShown] = useState(false)\n\n  const submitChangePassword = (data) => {\n    setIsLoadingShown(true)\n    UserService.changePassword(data)\n      .then(() => {\n        form.resetFields()\n        setIsLoadingShown(false)\n        DisplayUtils.showNotification(TEXT_NOTIFICATION_SUCCESS.UPDATE_INFO_SUCCESS)\n      })\n      .catch((error) => {\n        setIsLoadingShown(false)\n        ErrorHandlerUtils.http(error)\n      })\n  }\n\n  return (\n    <div className={styles['user-info-body']}>\n      <h2 className={styles['user-info-title']}>{TEXT_UI_USER_PROFILE.GENERAL_INFORMATION}</h2>\n      <LoadingIndicator isHidden={!isLoadingShown}>\n        <UserProfileComponent>\n          <ForgotPasswordModal\n            isShown={isForgotPasswordShown}\n            onClose={() => setIsForgotPasswordShown(false)}\n            currentUserEmail={currentUser.email}\n            ModelService={UserService}\n          />\n          <Card title={TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.TITLE}>\n            <Form\n              {...layout}\n              name=\"basic\"\n              form={form}\n              initialValues={{\n                oldPassword: '',\n                newPassword: '',\n                newPasswordConfirm: '',\n              }}\n              onFinish={submitChangePassword}\n            >\n              <Form.Item\n                labelCol={{ span: 6 }}\n                name=\"oldPassword\"\n                label={TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.OLD_PASSWORD}\n                className=\"custom-form-item-label-required\"\n                hasFeedback\n                rules={[\n                  () => ({\n                    validator(_, value) {\n                      return ValidationUtils.password(value)\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item\n                labelCol={{ span: 6 }}\n                name=\"newPassword\"\n                label={TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.NEW_PASSWORD}\n                className=\"custom-form-item-label-required\"\n                hasFeedback\n                rules={[\n                  () => ({\n                    validator(_, value) {\n                      return ValidationUtils.password(value)\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item\n                labelCol={{ span: 6 }}\n                name=\"newPasswordConfirm\"\n                label={TEXT_UI_USER_PROFILE.CHANGE_PASSWORD.NEW_PASSWORD_CONFIRM}\n                className=\"custom-form-item-label-required\"\n                hasFeedback\n                dependencies={['newPassword']}\n                rules={[\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      return ValidationUtils.textUserInfo(value).then(() =>\n                        ValidationUtils.passwordConfirm(getFieldValue('newPassword'), value),\n                      )\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item {...tailLayout}>\n                <div className={styles['form-footer']}>\n                  <Space>\n                    <Button type=\"cancel\">{TEXT_BUTTON.CANCEL}</Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      {TEXT_BUTTON.SAVE}\n                    </Button>\n                  </Space>\n                  <div className={styles['link-forgot-pwd']}>\n                    <a\n                      className=\"float-right text-underline typography-small\"\n                      onClick={() => setIsForgotPasswordShown(true)}\n                    >\n                      {TEXT_UI_AUTH.LOGIN.FORGOT_PASSWORD}\n                    </a>\n                  </div>\n                </div>\n              </Form.Item>\n            </Form>\n          </Card>\n        </UserProfileComponent>\n      </LoadingIndicator>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps)(ChangePassword)\n"],"sourceRoot":""}