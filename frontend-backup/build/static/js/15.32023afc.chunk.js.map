{"version":3,"sources":["asset/img/icon/search.svg","component/HtmlRender/index.js","view/contest/topFilter/index.js","view/contest/topFilter/style.module.scss","view/contest/detail/ranking/style.module.scss","view/contest/detail/style.module.scss","view/contest/detail/information/index.js","view/contest/detail/waitingRoom/index.js","view/contest/detail/ranking/index.js","view/contest/detail/index.js"],"names":["window","katex","modules","syntax","highlight","text","hljs","highlightAuto","value","clipboard","matchVisual","formats","HtmlRender","props","htmlData","readOnly","theme","TopFilter","useState","isPublic","setIsPublic","useEffect","currentPathname","URLUtils","getPathnameInURL","indexOf","FE_ROUTE","CONTEST","PUBLIC","className","styles","btn","active","join","to","TEXT_UI_CONTEST","PRIVATE","size","suffix","alt","src","iconSearch","placeholder","module","exports","ContestInformation","contest","information","connect","currentUser","authReducer","history","useHistory","isLoading","setIsLoading","isHidden","targetTime","event_time_begin","isDisabled","status","CONTEST_STATUS","PAST","ONGOING","waiting_room","type","onClick","ValidationUtils","empty","push","AUTH","LOGIN","ContestService","visitRoom","id","then","url","moveToURL","catch","error","ErrorHandlerUtils","http","ContestRanking","console","log","rankings","columns","dataSource","data","bordered","title","dataIndex","key","width","children","order","username","contest1","contest2","contest3","TabPane","ContestDetail","match","params","currentTab","setCurrentTab","setContest","tabId","getParamsInURL","tab","getById","contestObject","content","defaultActiveKey","centered","INFORMATION","WAITING_ROOM","RANKING"],"mappings":"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","file":"static/js/15.32023afc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.67c51618.svg\";","import React from 'react'\nimport hljs from 'highlight.js'\nimport ReactQuill from 'react-quill'\nimport katex from 'katex'\nimport 'highlight.js/styles/vs2015.css'\nimport 'react-quill/dist/quill.bubble.css'\nimport './style.overwrite.scss'\nimport 'katex/dist/katex.min.css'\n\nwindow.katex = katex\n\nconst modules = {\n  syntax: {\n    highlight: (text) => hljs.highlightAuto(text).value,\n  },\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n}\n\nconst formats = [\n  'header',\n  'font',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'script',\n  'formula',\n  'code-block',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'video',\n  'align',\n  'height',\n  'width',\n  'class',\n  'style',\n  'color', 'background'\n]\n\nconst HtmlRender = (props) => {\n  const { htmlData } = props\n  const readOnly = true\n  return (\n    // <div dangerouslySetInnerHTML={{ __html: htmlData }} />\n    <ReactQuill\n      value={htmlData}\n      readOnly={readOnly}\n      theme=\"bubble\"\n      modules={modules}\n      formats={formats}\n    />\n  )\n}\n\nexport default HtmlRender\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Input } from 'antd'\nimport { FE_ROUTE, TEXT_UI_CONTEST } from 'config'\nimport { URLUtils } from 'utils'\nimport iconSearch from 'asset/img/icon/search.svg'\nimport styles from './style.module.scss'\n\nexport default function TopFilter() {\n  const [isPublic, setIsPublic] = useState(true)\n\n  useEffect(() => {\n    const currentPathname = URLUtils.getPathnameInURL()\n    setIsPublic(currentPathname.indexOf(FE_ROUTE.CONTEST.PUBLIC) === 0)\n  }, [])\n\n  return (\n    <>\n      <div className={styles['switch-buttons']}>\n        <Button className={[styles.btn, isPublic ? styles.active : ''].join(' ')}>\n          <Link to={FE_ROUTE.CONTEST.PUBLIC}>\n            <span className=\"typography-menu transform-uppercase\">{TEXT_UI_CONTEST.PUBLIC}</span>\n          </Link>\n        </Button>\n        <Button className={[styles.btn, !isPublic ? styles.active : ''].join(' ')}>\n          <Link to={FE_ROUTE.CONTEST.PRIVATE}>\n            <span className=\"typography-menu transform-uppercase\">{TEXT_UI_CONTEST.PRIVATE}</span>\n          </Link>\n        </Button>\n      </div>\n\n      <div className={styles['search-challenge']}>\n        <Input\n          size=\"large\"\n          suffix={<img alt=\"search-icon\" src={iconSearch} />}\n          placeholder={isPublic ? 'Tìm tên cuộc thi...' : 'Nhập mã chia sẻ'}\n        />\n      </div>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contest-page-content\":\"style_contest-page-content__2UlCv\",\"switch-buttons\":\"style_switch-buttons__3juiA\",\"btn\":\"style_btn__26eDt\",\"active\":\"style_active__1n1kN\",\"search-challenge\":\"style_search-challenge__3ZJ7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rankings\":\"style_rankings__86hGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contest-page-content\":\"style_contest-page-content__gtFHu\",\"content\":\"style_content__21MSJ\",\"pagination\":\"style_pagination__2mrxX\"};","import HtmlRender from 'component/HtmlRender'\nimport React, { useState, useEffect } from 'react'\n\nexport default function ContestInformation(props) {\n  const { contest } = props\n\n  return <HtmlRender htmlData={contest.information} />\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Card, Button } from 'antd'\nimport { CONTEST_STATUS, FE_ROUTE } from 'config'\nimport { CountDownNumberic, LoadingIndicator } from 'component'\nimport { ContestService } from 'service'\nimport { DateTimeUtils, ErrorHandlerUtils, URLUtils, ValidationUtils } from 'utils'\nimport HtmlRender from 'component/HtmlRender'\n\nfunction ContestWaitingRoom({ currentUser, contest }) {\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n\n  /* eslint-disable camelcase */\n  useEffect(() => {\n    // todo: nen check status la sap dien ra nua\n    // if (!contest) return\n    // const { id, is_public, event_time_begin } = contest\n    // if (\n    //   DateTimeUtils.addToDate(DateTimeUtils.now(), '15m') >\n    //   DateTimeUtils.textToDate(event_time_begin)\n    // ) {\n    //   const counter = setInterval(() => {\n    //     if (DateTimeUtils.now() > DateTimeUtils.textToDate(event_time_begin)) {\n    //       clearInterval(counter)\n    //       URLUtils.moveToURL(\n    //         `${FE_ROUTE.CONTEST.HOME}/${is_public ? 'public' : 'private'}/${id}?tab=waitingRoom`,\n    //       )\n    //     }\n    //   }, 10000)\n    // }\n  }, [])\n  /* eslint-enable camelcase */\n\n  const visitRoom = () => {\n    if (ValidationUtils.empty(currentUser))\n      history.push(`${FE_ROUTE.AUTH.LOGIN}?next=${URLUtils.getPathnameInURL()}`)\n    // login already\n    setIsLoading(true)\n    ContestService.visitRoom({ id: contest.id })\n      .then((url) => {\n        URLUtils.moveToURL(url)\n      })\n      .catch((error) => {\n        setIsLoading(false)\n        ErrorHandlerUtils.http(error)\n      })\n  }\n\n  return (\n    <LoadingIndicator isHidden={!isLoading}>\n      <Card className=\"ta-center\">\n        <h4>Phòng thi sẽ bắt đầu sau</h4>\n        <div className=\"m-t-20 m-b-20 align-content-center\">\n          {contest && (\n            <CountDownNumberic\n              targetTime={contest.event_time_begin}\n              isDisabled={\n                contest.status === CONTEST_STATUS.PAST || contest.status === CONTEST_STATUS.ONGOING\n              }\n            />\n          )}\n        </div>\n\n        <HtmlRender htmlData={contest.waiting_room} />\n        <br></br>\n        {contest && contest.status === CONTEST_STATUS.ONGOING && (\n          <Button type=\"primary\" size=\"large\" className=\"m-t-20\" onClick={visitRoom}>\n            Vào phòng thi\n          </Button>\n        )}\n      </Card>\n    </LoadingIndicator>\n  )\n}\n\nconst mapStateToProps = ({ authReducer: { currentUser } }) => ({ currentUser })\nexport default connect(mapStateToProps)(ContestWaitingRoom)\n","import React, { useState, useEffect } from 'react'\nimport { Table } from 'antd'\nimport styles from './style.module.scss'\n\nexport default function ContestRanking() {\n  useEffect(() => {\n    console.log(`-------- Contest Deailt: ranking mounted`)\n  }, [])\n\n  return (\n    <div className={styles.rankings}>\n      <Table columns={columns} dataSource={data} bordered size=\"middle\" />\n    </div>\n  )\n}\n\nconst columns = [\n  {\n    title: 'Hạng',\n    dataIndex: 'order',\n    key: 'order',\n    width: 50,\n  },\n  {\n    title: 'Username',\n    dataIndex: 'username',\n    key: 'username',\n    width: 150,\n  },\n  {\n    title: 'Bài thi',\n    dataIndex: 'contest',\n    key: 'contest',\n    width: 400,\n    children: [\n      {\n        title: '1',\n        dataIndex: 'contest1',\n        key: 'contest1',\n        width: 100,\n      },\n      {\n        title: '2',\n        dataIndex: 'contest2',\n        key: 'contest1',\n        width: 100,\n      },\n      {\n        title: '3',\n        dataIndex: 'contest3',\n        key: 'contest1',\n        width: 100,\n      },\n      {\n        title: '4',\n        dataIndex: 'contest4',\n        key: 'contest1',\n        width: 100,\n      },\n    ],\n  },\n]\n\nconst data = [\n  {\n    key: 1,\n    order: 1,\n    username: 'User',\n    contest1: 10,\n    contest2: 10,\n    contest3: 10,\n  },\n  {\n    key: 2,\n    order: 2,\n    username: 'User',\n    contest1: 10,\n    contest2: 10,\n    contest3: 10,\n  },\n  {\n    key: 3,\n    order: 3,\n    username: 'User',\n    contest1: 10,\n    contest2: 10,\n    contest3: 10,\n  },\n]\n","import React, { useState, useEffect } from 'react'\nimport { Tabs } from 'antd'\nimport { ErrorHandlerUtils, URLUtils, ValidationUtils } from 'utils'\nimport { TEXT_UI_CONTEST } from 'config'\nimport { ContestService } from 'service'\nimport ContestInformation from './information'\nimport ContestWaitingRoom from './waitingRoom'\nimport ContestRanking from './ranking'\nimport TopFilter from '../topFilter'\n\nimport styles from './style.module.scss'\n\nconst { TabPane } = Tabs\n\nexport default function ContestDetail({\n  match: {\n    params: { id },\n  },\n}) {\n  const [currentTab, setCurrentTab] = useState(null)\n  const [contest, setContest] = useState(null)\n\n  useEffect(() => {\n    const queryParams = URLUtils.getParamsInURL()\n    const tabId = queryParams.tab\n    setCurrentTab(ValidationUtils.empty(tabId) ? 'information' : tabId)\n    ContestService.getById(id)\n      .then((contestObject) => {\n        setContest(contestObject)\n      })\n      .catch((error) => {\n        ErrorHandlerUtils.http(error)\n      })\n  }, [])\n\n  return (\n    <div className={styles.content}>\n      <TopFilter />\n      {currentTab && contest && (\n        <Tabs defaultActiveKey={currentTab} centered>\n          <TabPane tab={TEXT_UI_CONTEST.INFORMATION} key=\"information\">\n            <ContestInformation contest={contest} />\n          </TabPane>\n          <TabPane tab={TEXT_UI_CONTEST.WAITING_ROOM} key=\"waitingRoom\">\n            <ContestWaitingRoom contest={contest} />\n          </TabPane>\n          <TabPane tab={TEXT_UI_CONTEST.RANKING} key=\"ranking\">\n            <ContestRanking contest={contest} />\n          </TabPane>\n        </Tabs>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}